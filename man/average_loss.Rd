% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/average_loss.R
\name{average_loss}
\alias{average_loss}
\alias{average_loss.default}
\alias{average_loss.ranger}
\alias{average_loss.Learner}
\alias{average_loss.explainer}
\title{Average Loss}
\usage{
average_loss(object, ...)

\method{average_loss}{default}(
  object,
  X,
  y,
  pred_fun = stats::predict,
  BY = NULL,
  loss = "squared_error",
  w = NULL,
  ...
)

\method{average_loss}{ranger}(
  object,
  X,
  y,
  pred_fun = function(m, X, ...) stats::predict(m, X, ...)$predictions,
  BY = NULL,
  loss = "squared_error",
  w = NULL,
  ...
)

\method{average_loss}{Learner}(
  object,
  v,
  X,
  y,
  pred_fun = NULL,
  BY = NULL,
  loss = "squared_error",
  w = NULL,
  ...
)

\method{average_loss}{explainer}(
  object,
  X = object[["data"]],
  y = object[["y"]],
  pred_fun = object[["predict_function"]],
  BY = NULL,
  loss = "squared_error",
  w = object[["weights"]],
  ...
)
}
\arguments{
\item{object}{Fitted model object.}

\item{...}{Additional arguments passed to \code{pred_fun(object, X, ...)},
for instance \code{type = "response"} in a \code{\link[=glm]{glm()}} model.}

\item{X}{A data.frame or matrix serving as background dataset.}

\item{y}{Numeric vector or matrix of the response corresponding to \code{X}.}

\item{pred_fun}{Prediction function of the form \verb{function(object, X, ...)},
providing \eqn{K \ge 1} numeric predictions per row. Its first argument represents the
model \code{object}, its second argument a data structure like \code{X}. Additional arguments
(such as \code{type = "response"} in a GLM) can be passed via \code{...}. The default,
\code{\link[stats:predict]{stats::predict()}}, will work in most cases. Note that column names in a resulting
matrix of predictions will be used as default column names in the results.}

\item{BY}{Optional grouping vector.}

\item{loss}{One of "squared_error", "logloss", "mlogloss", "poisson",
"gamma", "absolute_error", or a loss function that turns observed and predicted
values (vectors or matrices) into a vector or matrix of unit losses.
For "mlogloss", the response \code{y} can either be a matrix with one column per category
or a vector with categories. The latter case is internally exploded to the shape
of the predictions via \code{stats::model.matrix(~ y + 0)}.}

\item{w}{Optional vector of case weights for each row of \code{X}.}

\item{v}{Vector of feature names.}
}
\value{
A matrix with one row per group and one column per loss dimension.
}
\description{
Calculates average loss, optionally grouped by a discrete vector.
The function supports multivariate losses and case weights.
}
\section{Methods (by class)}{
\itemize{
\item \code{average_loss(default)}: Default method.

\item \code{average_loss(ranger)}: Method for "ranger" models.

\item \code{average_loss(Learner)}: Method for "mlr3" models.

\item \code{average_loss(explainer)}: Method for DALEX "explainer".

}}
\examples{
# MODEL 1: Linear regression
fit <- lm(Sepal.Length ~ ., data = iris)
average_loss(fit, X = iris, y = iris$Sepal.Length)
average_loss(fit, X = iris, y = iris$Sepal.Length, BY = iris$Species)

# MODEL 2: Multi-response linear regression
fit <- lm(as.matrix(iris[1:2]) ~ Petal.Length + Petal.Width + Species, data = iris)
average_loss(fit, X = iris, y = iris[1:2])
average_loss(fit, X = iris, y = iris[1:2], loss = "gamma", BY = iris$Species)
}
