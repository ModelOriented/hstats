% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perm_importance.R
\name{perm_importance}
\alias{perm_importance}
\alias{perm_importance.default}
\alias{perm_importance.ranger}
\alias{perm_importance.Learner}
\alias{perm_importance.explainer}
\title{Permutation Importance}
\usage{
perm_importance(object, ...)

\method{perm_importance}{default}(
  object,
  v,
  X,
  y,
  pred_fun = stats::predict,
  loss = "squared_error",
  perms = 4L,
  agg_cols = FALSE,
  normalize = FALSE,
  n_max = 10000L,
  w = NULL,
  verbose = FALSE,
  ...
)

\method{perm_importance}{ranger}(
  object,
  v,
  X,
  y,
  pred_fun = function(m, X, ...) stats::predict(m, X, ...)$predictions,
  loss = "squared_error",
  perms = 4L,
  agg_cols = FALSE,
  normalize = FALSE,
  n_max = 10000L,
  w = NULL,
  verbose = FALSE,
  ...
)

\method{perm_importance}{Learner}(
  object,
  v,
  X,
  y,
  pred_fun = NULL,
  loss = "squared_error",
  perms = 4L,
  agg_cols = FALSE,
  normalize = FALSE,
  n_max = 10000L,
  w = NULL,
  verbose = FALSE,
  ...
)

\method{perm_importance}{explainer}(
  object,
  v = colnames(object[["data"]]),
  X = object[["data"]],
  y = object[["y"]],
  pred_fun = object[["predict_function"]],
  loss = "squared_error",
  perms = 4L,
  agg_cols = FALSE,
  normalize = FALSE,
  n_max = 10000L,
  w = object[["weights"]],
  verbose = FALSE,
  ...
)
}
\arguments{
\item{object}{Fitted model object.}

\item{...}{Additional arguments passed to \code{pred_fun(object, X, ...)},
for instance \code{type = "response"} in a \code{\link[=glm]{glm()}} model.}

\item{v}{Vector of feature names.}

\item{X}{A data.frame or matrix serving as background dataset.}

\item{y}{Numeric vector or matrix of the response corresponding to \code{X}.}

\item{pred_fun}{Prediction function of the form \verb{function(object, X, ...)},
providing \eqn{K \ge 1} numeric predictions per row. Its first argument represents the
model \code{object}, its second argument a data structure like \code{X}. Additional arguments
(such as \code{type = "response"} in a GLM) can be passed via \code{...}. The default,
\code{\link[stats:predict]{stats::predict()}}, will work in most cases. Note that column names in a resulting
matrix of predictions will be used as default column names in the results.}

\item{loss}{One of "squared_error", "logloss", "mlogloss", "poisson",
"gamma", "absolute_error", or a loss function that turns observed and predicted
values (vectors or matrices) into a vector or matrix of unit losses.
For "mlogloss", the response \code{y} can either be a matrix with one column per category
or a vector with categories. The latter case is internally exploded to the shape
of the predictions via \code{stats::model.matrix(~ y + 0)}.}

\item{perms}{Number of permutations (default 4).}

\item{agg_cols}{Should multivariate losses be summed up? Default is \code{FALSE}.}

\item{normalize}{Should importance statistics be divided by performance?
Default is \code{FALSE}. If \code{TRUE}, an importance of 1 means that the average loss
has doubled by shuffling that feature's column.}

\item{n_max}{If \code{X} has more than \code{n_max} rows, a random sample of \code{n_max} rows is
selected from \code{X}. In this case, set a random seed for reproducibility.}

\item{w}{Optional vector of case weights for each row of \code{X}.}

\item{verbose}{Should a progress bar be shown? The default is \code{TRUE}.}
}
\value{
An object of class "perm_importance" containing these elements:
\itemize{
\item \code{imp}: (p x d) matrix containing the sorted importance values, i.e.,
a row per variable and a column per loss dimension.
\item \code{SE}: (p x d) matrix with corresponding standard errors of \code{imp}.
Multiply with \code{sqrt(perms)} to get standard deviations.
\item \code{perf}: Average loss before shuffling.
\item \code{perms}: Same as input \code{perms}.
}
}
\description{
Calculates permutation feature importance (PVI) for a set of features.
}
\details{
The PVI of a feature is defined as the increase in average loss when
shuffling the corresponding column before calculating predictions.
The loss function can be specified as a string ("squared_error", "mlogloss", etc.)
or a vector/matrix valued function. Note that the model is never refitted.
Multivariate losses can be collapsed over columns (default) or analyzed separately.
}
\section{Methods (by class)}{
\itemize{
\item \code{perm_importance(default)}: Default method.

\item \code{perm_importance(ranger)}: Method for "ranger" models.

\item \code{perm_importance(Learner)}: Method for "mlr3" models.

\item \code{perm_importance(explainer)}: Method for DALEX "explainer".

}}
\examples{
# MODEL 1: Linear regression
fit <- lm(Sepal.Length ~ ., data = iris)
v <- setdiff(names(iris), "Sepal.Length")
s <- perm_importance(fit, v = v, X = iris, y = iris$Sepal.Length)
s
s$imp
s$SE  # Standard errors
plot(s)
plot(s, err_type = "sd")  # Standard deviations instead of standard errors

# MODEL 2: Multi-response linear regression
fit <- lm(as.matrix(iris[1:2]) ~ Petal.Length + Petal.Width + Species, data = iris)
v <- c("Petal.Length", "Petal.Width", "Species")
s <- perm_importance(fit, v = v, X = iris, y = iris[1:2])
s
plot(s)
plot(s, rotate_x = TRUE, facet_scale = "free_x", err_type = "sd")
}
\references{
Fisher A., Rudin C., Dominici F. (2018). All Models are Wrong but many are Useful:
Variable Importance for Black-Box, Proprietary, or Misspecified Prediction
Models, using Model Class Reliance. Arxiv.
}
