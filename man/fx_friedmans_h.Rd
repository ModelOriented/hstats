% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fx_friedmans_h.R
\name{fx_friedmans_h}
\alias{fx_friedmans_h}
\alias{fx_friedmans_h.default}
\alias{fx_friedmans_h.ranger}
\alias{fx_friedmans_h.Learner}
\title{Fast Friedman's H}
\usage{
fx_friedmans_h(object, ...)

\method{fx_friedmans_h}{default}(
  object,
  v,
  X,
  pred_fun = stats::predict,
  pairwise = FALSE,
  normalize = TRUE,
  squared = FALSE,
  n_max = 200L,
  out_names = NULL,
  w = NULL,
  verbose = TRUE,
  ...
)

\method{fx_friedmans_h}{ranger}(
  object,
  v,
  X,
  pred_fun = function(m, X, ...) stats::predict(m, X, ...)$predictions,
  pairwise = FALSE,
  normalize = TRUE,
  squared = FALSE,
  n_max = 200L,
  out_names = NULL,
  w = NULL,
  verbose = TRUE,
  ...
)

\method{fx_friedmans_h}{Learner}(
  object,
  v,
  X,
  pred_fun = function(m, X) m$predict_newdata(X)$response,
  pairwise = FALSE,
  normalize = TRUE,
  squared = FALSE,
  n_max = 200L,
  out_names = NULL,
  w = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{Fitted model object.}

\item{...}{Additional arguments passed to \code{pred_fun(object, X, ...)}.}

\item{v}{Vector of feature names for which interaction statistics are to be crunched.}

\item{X}{Dataframe or matrix serving as background dataset.}

\item{pred_fun}{Prediction function of the form \verb{function(object, X, ...)},
providing \eqn{K \ge 1} numeric predictions per row. Its first argument
represents the model \code{object}, its second argument a data structure like \code{X}.
Additional (named) arguments are passed via \code{...}.
The default, \code{\link[stats:predict]{stats::predict()}}, will work in most cases.}

\item{pairwise}{The default (\code{FALSE}) calculates overall interaction strength per
feature. Set to \code{TRUE} to get all pairwise statistics.}

\item{normalize}{Should explained variances be normalized? The default is \code{TRUE}.
If \code{squared = FALSE}, this produces Friedman's H.}

\item{squared}{Should squared statistics be returned? The default is \code{FALSE}.
If \code{normalize = TRUE}, this produces Friedman's H.}

\item{n_max}{If \code{X} has more than \code{n_max} rows, a random sample of \code{n_max} rows is
selected for calculations.}

\item{out_names}{Names of the output columns.}

\item{w}{Optional vector of case weights for each row of \code{X}.}

\item{verbose}{Should a progress bar be shown? Default is \code{TRUE}.}
}
\value{
A data.frame containing one or two (if \code{pairwise = TRUE}) columns with the
variable names, and K columns with the corresponding statistics for the K
components of the predict function, usually K = 1.
}
\description{
Fast implementation of Friedman's H statistic to measure interaction strength.
}
\details{
The three binary flags
\itemize{
\item \code{pairwise = FALSE},
\item \code{normalize = TRUE}, and
\item \code{squared = FALSE}
}

allow the calculation of eight different versions of Friedman's H.
If all values are left to the default, Friedman's H overall interaction strength
per feature is returned.
}
\section{Methods (by class)}{
\itemize{
\item \code{fx_friedmans_h(default)}: Default method.

\item \code{fx_friedmans_h(ranger)}: Method for "ranger" models
.

\item \code{fx_friedmans_h(Learner)}: Method for "mlr3" models.

}}
\examples{
# MODEL ONE: Linear regression
fit <- lm(Sepal.Length ~ . + Petal.Width:Species, data = iris)
fx_friedmans_h(fit, v = names(iris[-1]), X = iris, verbose = FALSE)
fx_friedmans_h(fit, v = names(iris[-1]), X = iris, verbose = FALSE, pairwise = TRUE)

# MODEL TWO: Multi-response linear regression
fit <- lm(as.matrix(iris[1:2]) ~ Petal.Length + Petal.Width * Species, data = iris)
v <- c("Petal.Length", "Petal.Width", "Species")
fx_friedmans_h(fit, v = v, X = iris)
fx_friedmans_h(fit, v = v, X = iris, pairwise = TRUE)

# MODEL THREE: Gamma GLM with log link
fit <- glm(
  Sepal.Length ~ . + Petal.Width:Species, 
  data = iris, 
  family = Gamma(link = log)
)

# No interactions for additive features, at least on link scale
fx_friedmans_h(fit, v = names(iris[-1]), X = iris, verbose = FALSE)

# On original scale, we have interactions everywhere...
fx_friedmans_h(
  fit, v = names(iris[-1]), X = iris, verbose = FALSE, type = "response"
)
}
\references{
Friedman, J. H. and Popescu, B. E. (2008). "Predictive learning via rule
ensembles." The Annals of Applied Statistics. JSTOR, 916â€“54.
}
