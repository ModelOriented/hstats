% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ice.R
\name{ice}
\alias{ice}
\alias{ice.default}
\alias{ice.ranger}
\alias{ice.Learner}
\title{Individual Conditional Expectations}
\usage{
ice(object, ...)

\method{ice}{default}(
  object,
  v,
  X,
  pred_fun = stats::predict,
  BY = NULL,
  grid = NULL,
  grid_size = 49L,
  trim = c(0.01, 0.99),
  strategy = c("uniform", "quantile"),
  n_max = 100L,
  w = NULL,
  center = TRUE,
  ...
)

\method{ice}{ranger}(
  object,
  v,
  X,
  pred_fun = function(m, X, ...) stats::predict(m, X, ...)$predictions,
  BY = NULL,
  grid = NULL,
  grid_size = 49L,
  trim = c(0.01, 0.99),
  strategy = c("uniform", "quantile"),
  n_max = 100,
  w = NULL,
  center = TRUE,
  ...
)

\method{ice}{Learner}(
  object,
  v,
  X,
  pred_fun = function(m, X) m$predict_newdata(X)$response,
  BY = NULL,
  grid = NULL,
  grid_size = 49L,
  trim = c(0.01, 0.99),
  strategy = c("uniform", "quantile"),
  n_max = 100L,
  w = NULL,
  center = TRUE,
  ...
)
}
\arguments{
\item{object}{Fitted model object.}

\item{...}{Additional arguments passed to \code{pred_fun(object, X, ...)},
for instance \code{type = "response"} in a \code{\link[=glm]{glm()}} model.}

\item{v}{Vector of feature names.}

\item{X}{A data.frame or matrix serving as background dataset.}

\item{pred_fun}{Prediction function of the form \verb{function(object, X, ...)},
providing K >= 1 numeric predictions per row. Its first argument represents the
model \code{object}, its second argument a data structure like \code{X}. Additional arguments
(such as \code{type = "response"} in a GLM) can be passed via \code{...}. The default,
\code{\link[stats:predict]{stats::predict()}}, will work in most cases. Note that column names in a resulting
matrix of predictions will be used as default column names in the results.}

\item{BY}{Optional grouping vector or a column name.}

\item{grid}{A vector (if \code{length(v) == 1L}), or a matrix/data.frame otherwise.
If \code{NULL}, calculated via \code{\link[=multivariate_grid]{multivariate_grid()}}.}

\item{grid_size}{Controls the approximate grid size. If \code{x} has p columns, then each
(non-discrete) column will be reduced to about the p-th root of \code{grid_size} values.}

\item{trim}{A non-discrete numeric variable is trimmed at these quantile
probabilities before calculations. Set to \code{c(0, 1)} for no trimming.}

\item{strategy}{How to find evaluation points of non-discrete numeric columns?
Either "uniform" (via \code{\link[=pretty]{pretty()}}) or "quantile", see description of
\code{\link[=univariate_grid]{univariate_grid()}}.}

\item{n_max}{If \code{X} has more than \code{n_max} rows, a random sample of \code{n_max} rows is
selected from \code{X}. In this case, set a random seed for reproducibility.}

\item{w}{Currently unused.}
}
\value{
An object of class "ice" containing these elements:
\itemize{
\item \code{ice_curves}: data.frame containing the ice values.
\item \code{v}: Same as input \code{v}.
\item \code{K}: Number of columns of prediction matrix.
\item \code{pred_names}: Column names of prediction matrix.
\item \code{BY}: Column name of grouping variable (or \code{NULL}).
\item \code{center}: Same as input \code{center}.
}
}
\description{
Estimates the partial dependence function of feature(s) \code{v} over a
grid of values. Both multivariate and multivariable situations are supported.
By default, the resulting values are plotted.
}
\section{Methods (by class)}{
\itemize{
\item \code{ice(default)}: Default method.

\item \code{ice(ranger)}: Method for "ranger" models.

\item \code{ice(Learner)}: Method for "mlr3" models.

}}
\examples{
# MODEL 1: Linear regression
fit <- lm(Sepal.Length ~ . + Species * Petal.Length, data = iris)
(ic <- ice(fit, v = "Species", X = iris))
plot(ic)

# Stratified by numeric BY variable
ic <- ice(fit, v = "Species", X = iris, BY = "Petal.Length")
plot(ic)

# MODEL 2: Multi-response linear regression
fit <- lm(as.matrix(iris[1:2]) ~ Petal.Length + Petal.Width * Species, data = iris)
plot(ice(fit, v = "Petal.Width", X = iris, BY = iris$Species))

# MODEL 3: Gamma GLM -> pass options to predict() via ...
fit <- glm(
  Sepal.Length ~ . + Petal.Width:Species,
  data = iris,
  family = Gamma(link = log)
)
plot(ice(fit, v = "Petal.Width", X = iris, type = "response"))
}
\references{
Goldstein, A. et al. (2015). Peeking inside the black box: Visualizing statistical
learning with plots of individual conditional expectation.
Journal of Computational and Graphical Statistics, 24:1
<doi.org/10.1080/10618600.2014.907095>.
}
